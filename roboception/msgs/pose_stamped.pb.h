// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roboception/msgs/pose_stamped.proto

#ifndef PROTOBUF_roboception_2fmsgs_2fpose_5fstamped_2eproto__INCLUDED
#define PROTOBUF_roboception_2fmsgs_2fpose_5fstamped_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "roboception/msgs/time.pb.h"
#include "roboception/msgs/pose.pb.h"
// @@protoc_insertion_point(includes)

namespace roboception {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_roboception_2fmsgs_2fpose_5fstamped_2eproto();
void protobuf_AssignDesc_roboception_2fmsgs_2fpose_5fstamped_2eproto();
void protobuf_ShutdownFile_roboception_2fmsgs_2fpose_5fstamped_2eproto();

class PoseStamped;

// ===================================================================

class PoseStamped : public ::google::protobuf::Message {
 public:
  PoseStamped();
  virtual ~PoseStamped();

  PoseStamped(const PoseStamped& from);

  inline PoseStamped& operator=(const PoseStamped& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoseStamped& default_instance();

  void Swap(PoseStamped* other);

  // implements Message ----------------------------------------------

  PoseStamped* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PoseStamped& from);
  void MergeFrom(const PoseStamped& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .roboception.msgs.Time timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline const ::roboception::msgs::Time& timestamp() const;
  inline ::roboception::msgs::Time* mutable_timestamp();
  inline ::roboception::msgs::Time* release_timestamp();
  inline void set_allocated_timestamp(::roboception::msgs::Time* timestamp);

  // optional .roboception.msgs.Pose pose = 2;
  inline bool has_pose() const;
  inline void clear_pose();
  static const int kPoseFieldNumber = 2;
  inline const ::roboception::msgs::Pose& pose() const;
  inline ::roboception::msgs::Pose* mutable_pose();
  inline ::roboception::msgs::Pose* release_pose();
  inline void set_allocated_pose(::roboception::msgs::Pose* pose);

  // @@protoc_insertion_point(class_scope:roboception.msgs.PoseStamped)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_pose();
  inline void clear_has_pose();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::roboception::msgs::Time* timestamp_;
  ::roboception::msgs::Pose* pose_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_roboception_2fmsgs_2fpose_5fstamped_2eproto();
  friend void protobuf_AssignDesc_roboception_2fmsgs_2fpose_5fstamped_2eproto();
  friend void protobuf_ShutdownFile_roboception_2fmsgs_2fpose_5fstamped_2eproto();

  void InitAsDefaultInstance();
  static PoseStamped* default_instance_;
};
// ===================================================================


// ===================================================================

// PoseStamped

// optional .roboception.msgs.Time timestamp = 1;
inline bool PoseStamped::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PoseStamped::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PoseStamped::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PoseStamped::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->::roboception::msgs::Time::Clear();
  clear_has_timestamp();
}
inline const ::roboception::msgs::Time& PoseStamped::timestamp() const {
  return timestamp_ != NULL ? *timestamp_ : *default_instance_->timestamp_;
}
inline ::roboception::msgs::Time* PoseStamped::mutable_timestamp() {
  set_has_timestamp();
  if (timestamp_ == NULL) timestamp_ = new ::roboception::msgs::Time;
  return timestamp_;
}
inline ::roboception::msgs::Time* PoseStamped::release_timestamp() {
  clear_has_timestamp();
  ::roboception::msgs::Time* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void PoseStamped::set_allocated_timestamp(::roboception::msgs::Time* timestamp) {
  delete timestamp_;
  timestamp_ = timestamp;
  if (timestamp) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
}

// optional .roboception.msgs.Pose pose = 2;
inline bool PoseStamped::has_pose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PoseStamped::set_has_pose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PoseStamped::clear_has_pose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PoseStamped::clear_pose() {
  if (pose_ != NULL) pose_->::roboception::msgs::Pose::Clear();
  clear_has_pose();
}
inline const ::roboception::msgs::Pose& PoseStamped::pose() const {
  return pose_ != NULL ? *pose_ : *default_instance_->pose_;
}
inline ::roboception::msgs::Pose* PoseStamped::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) pose_ = new ::roboception::msgs::Pose;
  return pose_;
}
inline ::roboception::msgs::Pose* PoseStamped::release_pose() {
  clear_has_pose();
  ::roboception::msgs::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline void PoseStamped::set_allocated_pose(::roboception::msgs::Pose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    set_has_pose();
  } else {
    clear_has_pose();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace roboception

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_roboception_2fmsgs_2fpose_5fstamped_2eproto__INCLUDED
