
# enable git submodules ('recursive' since our submodules include submodules themselves)

#############
# Currently not working (see below)
#
#variables:
#  GIT_SUBMODULE_STRATEGY: recursive
#############

before_script:
  - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  - apt-get update -yq && apt-get install -y lintian libprotobuf-dev protobuf-compiler

  ##############
  # TODO: Replace this by new version above!
  # Actually this is outdated version of treating git submodules.
  # However, according to https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/2148
  # this is currently not working (giving "SSL certificate problem") but should
  # be fixed with next gitlab version.
  - git submodule sync --recursive
  - git submodule update --init --recursive
  ##############


#############
# Templates
#############
.amd64_template: &amd64_job   # Hidden job that defines an anchor named 'amd64_job'
  image: registry.roboception.de/tools/docker_images:buildimage
  tags:
    - amd64
    - docker

.armhf_template: &armhf_job   # Hidden job that defines an anchor named 'armhf_job'
  image: registry.roboception.de/tools/docker_images:armhf-buildimage
  tags:
    - armhf
    - docker

.amd64_xenial_template: &amd64_xenial_job
  image: registry.roboception.de/tools/docker_images:xenial-buildimage
  tags:
    - amd64
    - docker

.armhf_xenial_template: &armhf_xenial_job
  image: registry.roboception.de/tools/docker_images:armhf-xenial-buildimage
  tags:
    - armhf
    - docker

.test_t: &test
  stage: test
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - CTEST_OUTPUT_ON_FAILURE=1 make test

.package_testing_t: &package_testing
  stage: deploy
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - make package
    - upload_deb.sh $DISTRO_CODENAME-testing *.deb
  only:
    - master

.package_stable_t: &package_stable
  stage: deploy
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - make package
    - upload_deb.sh $DISTRO_CODENAME-stable *.deb
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches

##############
#### Jobs ####
##############
gen_dox:
  <<: *amd64_job
  variables:
    TESTING_DEBS: "true"
  stage: deploy
  script:
    - apt-get install -y doxygen ncftp
    - mkdir build
    - cd build
    - cmake ..
    - make doc
    - upload_dox.sh doc/html
  only:
    - master
    - tags
  tags:
    - docs

# Test (on every commit)
########################
test_amd64:
  <<: *amd64_job
  <<: *test

test_armhf:
  <<: *armhf_job
  <<: *test

test_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *test

test_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *test

# Deploy testing (only on master)
#################################
package_testing_amd64:
  <<: *amd64_job
  <<: *package_testing

package_testing_armhf:
  <<: *armhf_job
  <<: *package_testing

package_testing_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *package_testing

package_testing_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *package_testing

# Deploy stable (only for releases, version tags)
#################################################
package_stable_amd64:
  <<: *amd64_job
  <<: *package_stable

package_stable_armhf:
  <<: *armhf_job
  <<: *package_stable

package_stable_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *package_stable

package_stable_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *package_stable
